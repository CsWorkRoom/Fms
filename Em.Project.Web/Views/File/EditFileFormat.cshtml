@using Easyman.Common.Mvc.Controls
@model Easyman.Dto.FileFormatModel
@{
    Layout = "~/Views/Shared/_CommonEdite.cshtml";
}
@section Styles{
    @*<link href="~/Common/css/TypeIcon/TypeIcon.css" rel="stylesheet" />*@
    <style>
                .btn {
            border-radius: 3px;
        }

        .iconBut {
            width: 40px;
            position: absolute !important;
            right: 0px;
            height: 100%;
            top: 0px;
            padding: 4px 5px !important;
        }
        .form-group {
            margin-bottom: 20px;
        }
    </style>
}

@Html.HiddenFor(h => h.Id)

<div class="tab-content" style="padding-top:12px;">
    <div role="tabpanel" class="tab-pane active" id="navMenu" style="margin-bottom:50px">

        <div class="form-group">
            <label for="Name" class="col-xs-2 control-label">文件格式</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(f => f.Name, new { @class = "form-control", placeholder = "文件格式", @Required = "Required", @oninvalid = "setCustomValidity('请输入文件格式名称')", @oninput = "setCustomValidity('')" })<i class="iRequired">*</i>
            </div>
            <label for="IsFolder" class="col-xs-2 control-label">是否文件夹</label>
            <div class="col-sm-4">
                @Html.DropDownListFor(m => m.IsFolder, new List<SelectListItem>() {
            new SelectListItem{ Text ="是", Value="true", Selected = true },
            new SelectListItem{ Text ="否", Value="false" }
        }, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="Icon" class="col-xs-2 control-label">小图标</label>
            <div class="col-sm-4">
                <div class="btn-group">
                    @Html.TextBoxFor(f => f.Icon, new { @class = "form-control", placeholder = "按钮图标", @onchange = "ContentIconType($(this).val())", @onkeyup = "ContentIconType($(this).val())" })
                    <button class="btn btn-default  dropdown-toggle iconBut" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" onclick="MyModelTypeIcon('#divTypeIcon')">
                        <span class="btn-value"><i id="icon_type_img" class="eventIcon"></i></span> <span class="caret"></span>
                    </button>
                    <div class="dropdown-menu divTypeIcon" id="divTypeIcon">
                        @Html.Partial("~/Views/Shared/Type_Icon.cshtml")
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="Remark" class="col-xs-2 control-label">说明</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(f => f.Remark, new { @class = "form-control", placeholder = "描述说明" })
            </div>
        </div>
    </div>
</div>


@section scripts{
    @*放页面自定义js*@
    @*<script src="~/Common/Scripts/TypeIcon/TypeIcon.js"></script>*@
    <script type="text/javascript">
        //母版页调用提交方法
        function SubmitForm() {
            //from表单提交路径
            var postUrl = "../api/services/api/FileFormat/InsertOrUpdateFileFormat";
            //提交方法-JS里面
            handleSubmitForm(postUrl);
        }
        //选择图标事件
        function ContentIconType(value) {
            debugger;
            $("#divTypeIcon").hide();
            $("#icon_type_img").attr("class", value);
            $("#Icon").val(value);
        }

        $(function () {
            $("#icon_type_img").attr("class",  $("#Icon").val());
        })
    </script>
}
