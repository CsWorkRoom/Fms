@using Easyman.Common.Mvc.Controls
@model Easyman.Dto.FileFormatModel
@{
    Layout = "~/Views/Shared/_CommonEdite.cshtml";
}
@section Styles{
    <style>
        #iconMenuDiv {
            width: 400px;
        }

            #iconMenuDiv span {
                padding: 5px;
                margin: 5px 10px;
                font-size: 22px;
                cursor: pointer;
                display: inline-block;
                border: 1px solid transparent;
            }

                #iconMenuDiv span:hover {
                    transform: scale(1.02);
                    border: 1px solid #ccc;
                    border-radius: 4px;
                }

            #iconMenuDiv h5 {
                margin-left: 10px;
                padding-bottom: 4px;
                border-bottom: solid 1px #707070;
            }

        .form-group {
            margin-bottom: 20px;
        }
    </style>
}

@Html.HiddenFor(h => h.Id)

<div class="tab-content" style="padding-top:12px;">
    <div role="tabpanel" class="tab-pane active" id="navMenu" style="margin-bottom:50px">
        <div class="form-group">
            <label for="Name" class="col-xs-2 control-label">文件格式</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(f => f.Name, new { @class = "form-control", placeholder = "文件格式", @Required = "Required", @oninvalid = "setCustomValidity('请输入文件格式名称')", @oninput = "setCustomValidity('')" })<i class="iRequired">*</i>
            </div>
            <label for="IsFolder" class="col-xs-2 control-label">是否文件夹</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(f => f.IsFolder, new { @class = "form-control", placeholder = "文件格式", @Required = "Required", @oninvalid = "setCustomValidity('请输入文件格式名称')", @oninput = "setCustomValidity('')" })<i class="iRequired">*</i>


                @*@Html.DropDownListFor(m => m.IsFolder, new List<SelectListItem>() {
            new SelectListItem{ Text ="是", Value="1", Selected = true },
            new SelectListItem{ Text ="否", Value="0" }
        }, new { @class = "form-control" })*@
            </div>
        </div>

        <div class="form-group">
            <label for="Icon" class="col-xs-2 control-label">图标</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(f => f.Icon, new { @class = "form-control", placeholder = "图标名称", @Required = "Required", @oninvalid = "setCustomValidity('请输入属性名称')", @oninput = "setCustomValidity('')" })<i class="iRequired">*</i>
            </div>
        </div>
        <div class="form-group">
            <label for="Remark" class="col-xs-2 control-label">说明</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(f => f.Remark, new { @class = "form-control", placeholder = "描述说明" })
            </div>
        </div>
    </div>
</div>


@section scripts{
    @*放页面自定义js*@
    <script type="text/javascript">
    //母版页调用提交方法
    function SubmitForm() {
        //from表单提交路径
        var postUrl = "../api/services/api/FileFormat/InsertOrUpdateFileFormat";
        //提交方法-JS里面
        handleSubmitForm(postUrl);
    }
    </script>
}
