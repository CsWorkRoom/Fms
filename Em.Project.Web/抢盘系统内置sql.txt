一、包PKG_MONTH_TARGET
定义代码如下：
==============================================================================================================
以下是包PKG_MONTH_TARGET内容
==============================================================================================================

CREATE OR REPLACE PACKAGE GPS.PKG_MONTH_TARGET
AS
   --------------写入一条日志---------------------------------------------------------------------------
   PROCEDURE LOG (CUR_MONTH_BILL_ID IN NUMBER, CUR_LOG IN NCLOB);

   --------------生成指标明细---------------------------------------------------------------------------
   FUNCTION GENERATE_MONTH_BILL (CUR_MONTH IN NVARCHAR2)
      RETURN NCLOB;

   --------------获得指标完成值+计算指标得分------------------------------------------------------------
   FUNCTION CALCULATE_TARGET_SCORE (CUR_MONTH IN NVARCHAR2)
      RETURN NCLOB;

   --------------计算区县和客户经理的奖金系数和奖金-----------------------------------------------------
   FUNCTION CALCULATE_MONTH_BONUS_DETAIL (CUR_MONTH IN NVARCHAR2)
      RETURN NCLOB;
END PKG_MONTH_TARGET;
/

CREATE OR REPLACE PACKAGE BODY GPS.PKG_MONTH_TARGET
AS
   --------------写入一条日志---------------------------------------------------------------------------
   PROCEDURE LOG (CUR_MONTH_BILL_ID IN NUMBER, CUR_LOG IN NCLOB)
   IS
   BEGIN
      INSERT INTO GP_MONTH_BILL_LOG (MONTH_BILL_ID,
                                     LOG,
                                     LOG_TIME,
                                     CREATE_TIME)
           VALUES (CUR_MONTH_BILL_ID,
                   CUR_LOG,
                   SYSDATE,
                   SYSDATE);

      COMMIT;
   END;

   --------------生成指标明细---------------------------------------------------------------------------
   FUNCTION GENERATE_MONTH_BILL (CUR_MONTH IN NVARCHAR2)
      RETURN NCLOB
   IS
      PRAGMA AUTONOMOUS_TRANSACTION;
      CUR_MONTH_BILL_ID   NUMBER (19);                                 --固话单ID
      CUR_BONUS_VALUE     BINARY_DOUBLE;                                --月度奖金

      V_SQL               VARCHAR2 (2000);            --sql(不能把类型声明为NVARCHAR2)
      RESULT_STR          NCLOB;                                         --返回值
   BEGIN
      SELECT MAX (BONUS_VALUE)
        INTO CUR_BONUS_VALUE
        FROM GP_MONTH_BONUS
       WHERE MONTH = CUR_MONTH;

      IF CUR_BONUS_VALUE > 0                                      --当已设置了总奖金额时
      THEN
         --获得当前固话单
         SELECT MAX (ID)
           INTO CUR_MONTH_BILL_ID
           FROM GP_MONTH_BILL
          WHERE MONTH = CUR_MONTH AND IS_USE = 1;

         IF CUR_MONTH_BILL_ID > 0                           --已具有有效的固化信息时，取消固化
         THEN
            RESULT_STR :=
                  RESULT_STR
               || '当月【'
               || CUR_MONTH
               || '】指标已固化！';
         ELSE
            --新建固化单并返回固化单ID

            INSERT INTO GP_MONTH_BILL (ID,
                                       MONTH,
                                       BONUS_VALUE,
                                       CUR_WAY,
                                       CUR_TIME,
                                       STATUS,
                                       IS_USE,
                                       CREATE_TIME)
                 VALUES (CUR_MONTH_BILL_ID,
                         CUR_MONTH,
                         CUR_BONUS_VALUE,
                         '包函数固化',
                         SYSDATE,
                         '固化中',
                         1,
                         SYSDATE)
              RETURNING ID
                   INTO CUR_MONTH_BILL_ID;

            COMMIT;

            --写日志
            LOG (
               CUR_MONTH_BILL_ID,
                  '开始固化月份【'
               || CUR_MONTH
               || '】固化单【'
               || CUR_MONTH_BILL_ID
               || '】,启动方式【包函数】');



            LOG (
               CUR_MONTH_BILL_ID,
               '开始批量创建指标信息备份，写入至表GP_MONTH_TARGET');


            INSERT INTO GP_MONTH_TARGET (MONTH,
                                         MONTH_BILL_ID,
                                         TARGET_TYPE_ID,
                                         TARGET_TAG_ID,
                                         TARGET_ID,
                                         TARGET_NAME,
                                         CHOOSE_TYPE,
                                         WEIGHT,
                                         REMARK,
                                         END_TABLE,
                                         MAIN_FIELD,
                                         CREATE_TIME,
                                         CRISIS_VALUE)
               (SELECT CUR_MONTH MONTH,
                       CUR_MONTH_BILL_ID MONTH_BILL_ID,
                       TARGET_TYPE_ID,
                       TARGET_TAG_ID,
                       ID TARGET_ID,
                       NAME TARGET_NAME,
                       CHOOSE_TYPE,
                       WEIGHT,
                       REMARK,
                       END_TABLE,
                       MAIN_FIELD,
                       SYSDATE CREATE_TIME,
                       CRISIS_VALUE
                  FROM GP_TARGET
                 WHERE IS_USE = 1);

            LOG (CUR_MONTH_BILL_ID, '完成批量创建指标信息备份');

            LOG (CUR_MONTH_BILL_ID,
                 '开始批量创建指标明细（区县指标）');

            INSERT INTO GP_MONTH_TARGET_DETAIL (MONTH,
                                                MONTH_TARGET_ID,
                                                TARGET_TYPE_ID,
                                                TARGET_TAG_ID,
                                                TARGET_ID,
                                                END_TABLE,
                                                MAIN_FIELD,
                                                DISTRICT_ID,
                                                WEIGHT,
                                                YEAR_TVALUE,
                                                TVALUE,
                                                CREATE_TIME,
                                                MONTH_BILL_ID,
                                                CRISIS_VALUE)
               (SELECT CUR_MONTH MONTH,
                       A.MONTH_TARGET_ID,
                       A.TARGET_TYPE_ID,
                       A.TARGET_TAG_ID,
                       A.TARGET_ID,
                       A.END_TABLE,
                       A.MAIN_FIELD,
                       A.DISTRICT_ID,
                       A.WEIGHT,
                       NVL (B.TVALUE, 0) YEAR_TVALUE,
                         NVL (B.TVALUE, 0)
                       * TO_NUMBER (SUBSTR (CUR_MONTH, 4, 2))
                       / 12
                          TVALUE,
                       SYSDATE CREATE_TIME,
                       CUR_MONTH_BILL_ID MONTH_BILL_ID,
                       A.CRISIS_VALUE
                  FROM (SELECT C.ID MONTH_TARGET_ID,
                               B.TARGET_TYPE_ID TARGET_TYPE_ID,
                               B.TARGET_TAG_ID TARGET_TAG_ID,
                               B.ID TARGET_ID,
                               B.END_TABLE,
                               B.MAIN_FIELD,
                               A.ID DISTRICT_ID,
                               B.WEIGHT,
                               B.CRISIS_VALUE
                          FROM EM_DISTRICT A,
                               GP_TARGET B LEFT JOIN GP_MONTH_TARGET C ON (    B.ID =
                                                                                  C.TARGET_ID
                                                                           AND C.MONTH =
                                                                                  CUR_MONTH)
                         WHERE     A.CUR_LEVEL = 2
                               AND A.IS_USE = 1
                               AND B.IS_USE = 1
                               AND B.TARGET_TAG_ID = 1) A
                       LEFT JOIN
                       GP_TARGET_VALUE B
                          ON (    A.TARGET_ID = B.TARGET_ID
                              AND B.YEAR_MONTH = SUBSTR (CUR_MONTH, 0, 4)));

            LOG (CUR_MONTH_BILL_ID,
                 '完成批量创建指标明细（区县指标）');

            LOG (CUR_MONTH_BILL_ID,
                 '开始批量创建指标明细（客户经理指标）');

            INSERT INTO GP_MONTH_TARGET_DETAIL (MONTH,
                                                MONTH_TARGET_ID,
                                                TARGET_TYPE_ID,
                                                TARGET_TAG_ID,
                                                TARGET_ID,
                                                END_TABLE,
                                                MAIN_FIELD,
                                                DISTRICT_ID,
                                                MANAGER_NO,
                                                MANAGER_NAME,
                                                WEIGHT,
                                                TVALUE,
                                                CREATE_TIME,
                                                MONTH_BILL_ID,
                                                CRISIS_VALUE)
               (SELECT CUR_MONTH MONTH,
                       A.MONTH_TARGET_ID,
                       A.TARGET_TYPE_ID,
                       A.TARGET_TAG_ID,
                       A.TARGET_ID,
                       A.END_TABLE,
                       A.MAIN_FIELD,
                       A.DISTRICT_ID,
                       A.MANAGER_NO,
                       A.MANAGER_NAME,
                       A.WEIGHT,
                       NVL (B.TVALUE, 0) TVALUE,
                       SYSDATE CREATE_TIME,
                       CUR_MONTH_BILL_ID MONTH_BILL_ID,
                       A.CRISIS_VALUE
                  FROM (SELECT C.ID MONTH_TARGET_ID,
                               B.TARGET_TYPE_ID TARGET_TYPE_ID,
                               B.TARGET_TAG_ID TARGET_TAG_ID,
                               B.ID TARGET_ID,
                               B.END_TABLE,
                               B.MAIN_FIELD,
                               A.DISTRICT_ID,
                               A.MANAGER_NO,
                               A.MANAGER_NAME,
                               B.WEIGHT,
                               B.CRISIS_VALUE
                          FROM (SELECT A.*
                                  FROM GP_MANAGER A, EM_DISTRICT B
                                 WHERE A.DISTRICT_ID = B.ID) A,
                               GP_TARGET B LEFT JOIN GP_MONTH_TARGET C ON (    B.ID =
                                                                                  C.TARGET_ID
                                                                           AND C.MONTH =
                                                                                  CUR_MONTH)
                         WHERE B.IS_USE = 1 AND B.TARGET_TAG_ID = 2) A
                       LEFT JOIN
                       GP_TARGET_VALUE B
                          ON (    A.TARGET_ID = B.TARGET_ID
                              AND B.YEAR_MONTH = CUR_MONTH
                              AND A.MANAGER_NO = B.MANAGER_NO));


            LOG (CUR_MONTH_BILL_ID,
                 '完成批量创建指标明细（客户经理指标）');
         END IF;
      ELSE                                                   --未设置总奖金额时，返回错误内容
         RESULT_STR :=
               RESULT_STR
            || '未设置月份【'
            || CUR_MONTH
            || '】全州总奖金！';
      END IF;

      COMMIT;

      RETURN RESULT_STR;
   END;

   --------------获得指标完成值+计算指标得分------------------------------------------------------------
   FUNCTION CALCULATE_TARGET_SCORE (CUR_MONTH IN NVARCHAR2)
      RETURN NCLOB
   IS
      PRAGMA AUTONOMOUS_TRANSACTION;


      CURSOR TARGET_DETAIL_CUR
      IS
         SELECT A.*, B.CODE E_DISTRICT_ID
           FROM GP_MONTH_TARGET_DETAIL A
                LEFT JOIN EM_DISTRICT B ON (A.DISTRICT_ID = B.ID)
          WHERE A.MONTH = CUR_MONTH;

      --定义一个游标行变量
      CUR_ROW             TARGET_DETAIL_CUR%ROWTYPE;
      TVALUE_SQL          VARCHAR2 (2000);      --查询目标值的sql(不能把类型声明为NVARCHAR2)
      KPI_VALUE           NVARCHAR2 (200);
      RESULT_STR          NCLOB;
      CAL_SCORE           BINARY_DOUBLE;                                --指标得分
      PER_VALUE           BINARY_DOUBLE;
      DETAIL_REMARK       NVARCHAR2 (300);                       --每个指标明细的备注说明
      CUR_MONTH_BILL_ID   NUMBER (19);                                 --固话单ID
   BEGIN
      --获得当前固话单
      SELECT MAX (ID)
        INTO CUR_MONTH_BILL_ID
        FROM GP_MONTH_BILL
       WHERE MONTH = CUR_MONTH AND IS_USE = 1;

      LOG (CUR_MONTH_BILL_ID,
           '开始批量更新指标完成值和计算指标得分');

      OPEN TARGET_DETAIL_CUR;

      LOOP
         FETCH TARGET_DETAIL_CUR INTO CUR_ROW;

         EXIT WHEN TARGET_DETAIL_CUR%NOTFOUND;

         KPI_VALUE := '0';                                            --初始化指标值

         --循环获得每个明细的完成值sql
         IF CUR_ROW.TARGET_TAG_ID = 1                                   --区县指标
         THEN
            TVALUE_SQL :=
                  'SELECT TO_CHAR('
               || CUR_ROW.MAIN_FIELD
               || ') FROM '
               || CUR_ROW.END_TABLE
               || '_'
               || CUR_MONTH
               || ' WHERE TO_CHAR(DISTRICT_ID)='''
               || CUR_ROW.E_DISTRICT_ID
               || '''';
         ELSE                                                         --客户经理指标
            TVALUE_SQL :=
                  'SELECT TO_CHAR('
               || CUR_ROW.MAIN_FIELD
               || ') FROM '
               || CUR_ROW.END_TABLE
               || '_'
               || CUR_MONTH
               || ' WHERE MANAGER_NO='''
               || CUR_ROW.MANAGER_NO
               || '''';
         END IF;

         BEGIN
            EXECUTE IMMEDIATE TVALUE_SQL INTO KPI_VALUE; --执行sql，得到完成值kpi_value
         EXCEPTION
            WHEN OTHERS
            THEN
               RESULT_STR :=
                     RESULT_STR
                  || '<br/> sql执行错误:'
                  || TVALUE_SQL
                  || ' INTO KPI_VALUE';
         END;

         PER_VALUE := 0;                                            --初始化完成值占比
         CAL_SCORE := 0;                                             --得分初始化为0
         DETAIL_REMARK := '';                                        --初始化明细说明


         -------------获取PER_VALUE-----------------------------
         IF CUR_ROW.TVALUE > 0
         THEN
            IF LENGTH (KPI_VALUE) > 0
            THEN
               IF TO_NUMBER (KPI_VALUE) >= CUR_ROW.TVALUE
               THEN
                  PER_VALUE := 1;
                  DETAIL_REMARK :=
                     '完成值大于等于目标值，占比设为1';
               ELSE
                  PER_VALUE :=
                     ROUND (TO_NUMBER (KPI_VALUE) / CUR_ROW.TVALUE, 2);
               END IF;
            ELSE
               DETAIL_REMARK :=
                     '<br/>  未在结果表['
                  || CUR_ROW.END_TABLE
                  || '_'
                  || CUR_MONTH
                  || ']中找到明细编号['
                  || CUR_ROW.ID
                  || ']的指标完成值';
            END IF;
         ELSE
            PER_VALUE := 1;                                     --位设定目标值时，占比为1
            DETAIL_REMARK :=
               '该指标目标值小于等于0，占比直接设为1.';
         END IF;

         -------------获取PER_VALUE结束-----------------------------

         -------------算出得分值 CAL_SCORE-----------------------------
         IF PER_VALUE < CUR_ROW.CRISIS_VALUE
         THEN
            CAL_SCORE := 0;
            DETAIL_REMARK :=
                  '完成值占比'
               || TO_CHAR (PER_VALUE, '0.99')
               || '小于门槛值'
               || TO_CHAR (CUR_ROW.CRISIS_VALUE, '0.99')
               || ',故得分为0.'
               || DETAIL_REMARK;
         ELSE
            CAL_SCORE := CUR_ROW.WEIGHT * PER_VALUE;
            DETAIL_REMARK :=
                  '算分成功！达到门槛值'
               || CUR_ROW.CRISIS_VALUE
               || ',当前占比为'
               || TO_CHAR (PER_VALUE, '0.99')
               || '.'
               || DETAIL_REMARK;
         END IF;

         -------------算出得分值 CAL_SCORE结束-----------------------------

         --更新指标完成值和得分
         UPDATE GP_MONTH_TARGET_DETAIL
            SET RESULT_VALUE = TO_NUMBER (KPI_VALUE),
                SCORE = CAL_SCORE,
                REMARK = DETAIL_REMARK
          WHERE ID = CUR_ROW.ID;

         COMMIT;
      END LOOP;

      CLOSE TARGET_DETAIL_CUR;

      LOG (CUR_MONTH_BILL_ID,
           '完成批量更新指标完成值和计算指标得分');

      COMMIT;
      RETURN RESULT_STR;
   END;



   --------------计算区县和客户经理的总得分和奖金系数------------------------------------------------------------
   FUNCTION CALCULATE_MONTH_BONUS_DETAIL (CUR_MONTH IN NVARCHAR2)
      RETURN NCLOB
   IS
      PRAGMA AUTONOMOUS_TRANSACTION;
      CUR_MONTH_BILL_ID   NUMBER (19);                                 --固话单ID

      MAX_SCORE           BINARY_DOUBLE;                                 --最大分
      MIN_SCORE           BINARY_DOUBLE;                                 --最小分
      AVG_SCORE           BINARY_DOUBLE;                                 --平均分
      SUM_SCORE           BINARY_DOUBLE;                                 --求和分

      ALL_BONUS_VALUE     BINARY_DOUBLE;                               --当月总奖金

      RESULT_STR          NCLOB;                                         --返回值
   BEGIN
      --获得当前固话单
      SELECT MAX (ID)
        INTO CUR_MONTH_BILL_ID
        FROM GP_MONTH_BILL
       WHERE MONTH = CUR_MONTH AND IS_USE = 1;

      IF CUR_MONTH_BILL_ID > 0
      THEN
         -------------阶段一：统计区县和客户经理总得分（从指标明细得分中）-----------------------------
         ----------------------------------------------------------------------------------------------

         LOG (
            CUR_MONTH_BILL_ID,
            '开始批量插入区县指标总得分至表GP_MONTH_BONUS_DETAIL');

         --统计并插入区县总得分
         INSERT INTO GP_MONTH_BONUS_DETAIL (MONTH,
                                            MONTH_BILL_ID,
                                            DISTRICT_ID,
                                            TARGET_SCORE,
                                            MARK_SCORE,
                                            MONTH_SCORE,
                                            TARGET_TAG_ID,              --指标标识
                                            CREATE_TIME)
            (  SELECT MONTH,
                      CUR_MONTH_BILL_ID MONTH_BILL_ID,
                      DISTRICT_ID,
                      NVL (SUM (SCORE), 0) TARGET_SCORE,
                      0,
                      NVL (SUM (SCORE), 0) MONTH_SCORE,
                      1 TARGET_TAG_ID,
                      SYSDATE CREATE_TIME
                 FROM GP_MONTH_TARGET_DETAIL
                WHERE TARGET_TAG_ID = 1 AND MONTH_BILL_ID = CUR_MONTH_BILL_ID
             GROUP BY MONTH, DISTRICT_ID);

         LOG (
            CUR_MONTH_BILL_ID,
            '完成批量插入区县指标总得分至表GP_MONTH_BONUS_DETAIL');


         LOG (
            CUR_MONTH_BILL_ID,
            '开始批量插入客户经理指标总得分至表GP_MONTH_BONUS_DETAIL');

         --统计并插入客户经理总得分
         INSERT INTO GP_MONTH_BONUS_DETAIL (MONTH,
                                            MONTH_BILL_ID,
                                            DISTRICT_ID,
                                            MANAGER_NO,
                                            MANAGER_NAME,
                                            TARGET_SCORE,
                                            MARK_SCORE,
                                            MONTH_SCORE,
                                            TARGET_TAG_ID,              --指标标识
                                            CREATE_TIME)
            (SELECT A.MONTH,
                    A.MONTH_BILL_ID,
                    A.DISTRICT_ID,
                    A.MANAGER_NO,
                    A.MANAGER_NAME,
                    A.TARGET_SCORE,
                    NVL (MARK_SCORE, 0) MARK_SCORE,
                    (A.TARGET_SCORE + NVL (MARK_SCORE, 0)) MONTH_SCORE,
                    A.TARGET_TAG_ID,
                    A.CREATE_TIME
               FROM (  SELECT MONTH,
                              CUR_MONTH_BILL_ID MONTH_BILL_ID,
                              DISTRICT_ID,
                              MANAGER_NO,
                              MANAGER_NAME,
                              NVL (SUM (SCORE), 0) TARGET_SCORE,
                              2 TARGET_TAG_ID,
                              SYSDATE CREATE_TIME
                         FROM GP_MONTH_TARGET_DETAIL
                        WHERE     TARGET_TAG_ID = 2
                              AND MONTH_BILL_ID = CUR_MONTH_BILL_ID
                     GROUP BY MONTH,
                              DISTRICT_ID,
                              MANAGER_NO,
                              MANAGER_NAME) A
                    LEFT JOIN
                    (  SELECT MONTH, MANAGER_NO, SUM (MARK_SCORE) MARK_SCORE
                         FROM GP_MONTH_SUBITEM_SCORE
                     GROUP BY MONTH, MANAGER_NO) B
                       ON (A.MONTH = B.MONTH AND A.MANAGER_NO = B.MANAGER_NO));

         LOG (
            CUR_MONTH_BILL_ID,
            '完成批量插入客户经理指标总得分至表GP_MONTH_BONUS_DETAIL');

         -------------阶段二：计算区县和客户经理的奖金系数---------------------------------------------
         ----------------------------------------------------------------------------------------------

         --获得区县最大分、最小分、平均分、总分
         SELECT MAX (MONTH_SCORE),
                MIN (MONTH_SCORE),
                SUM (MONTH_SCORE),
                AVG (MONTH_SCORE)
           INTO MAX_SCORE,
                MIN_SCORE,
                SUM_SCORE,
                AVG_SCORE
           FROM GP_MONTH_BONUS_DETAIL
          WHERE     TARGET_TAG_ID = 1
                AND MONTH = CUR_MONTH
                AND MONTH_BILL_ID = CUR_MONTH_BILL_ID;


         LOG (CUR_MONTH_BILL_ID, '开始批量更新区县奖金系数');

         --批量计算区县奖金系数。公式：1+（本团队得分 -全州团队平均分）/（全州团队最高分-全州团队最低分）*100%
         UPDATE GP_MONTH_BONUS_DETAIL A
            SET A.BONUS_RATIO =
                   DECODE (
                      (MAX_SCORE - MIN_SCORE),
                      0, 0,
                      (  1
                       +   (A.MONTH_SCORE - AVG_SCORE)
                         / (MAX_SCORE - MIN_SCORE)))
          WHERE     A.TARGET_TAG_ID = 1
                AND A.MONTH = CUR_MONTH
                AND A.MONTH_BILL_ID = CUR_MONTH_BILL_ID;

         LOG (CUR_MONTH_BILL_ID, '完成批量更新区县奖金系数');

         LOG (CUR_MONTH_BILL_ID,
              '开始批量更新客户经理奖金系数');

         --批量计算各区县客户经理的奖金系数（含总分、平均分、大小分）。公式：1+（本团队得分 -全州团队平均分）/（全州团队最高分-全州团队最低分）*100%
         MERGE INTO GP_MONTH_BONUS_DETAIL A
              USING (  SELECT MAX (MONTH_SCORE) MAX_SCORE,
                              MIN (MONTH_SCORE) MIN_SCORE,
                              SUM (MONTH_SCORE) SUM_SCORE,
                              AVG (MONTH_SCORE) AVG_SCORE,
                              DISTRICT_ID
                         FROM GP_MONTH_BONUS_DETAIL
                        WHERE     TARGET_TAG_ID = 2
                              AND MONTH = CUR_MONTH
                              AND MONTH_BILL_ID = CUR_MONTH_BILL_ID
                     GROUP BY DISTRICT_ID         --获得各个区县的客户经理的最大分、最小分、平均分、总分
                                         ) B
                 ON (    A.DISTRICT_ID = B.DISTRICT_ID
                     AND A.TARGET_TAG_ID = 2
                     AND A.MONTH = CUR_MONTH
                     AND A.MONTH_BILL_ID = CUR_MONTH_BILL_ID)
         WHEN MATCHED
         THEN
            UPDATE SET
               A.BONUS_RATIO =
                  DECODE (
                     (B.MAX_SCORE - B.MIN_SCORE),
                     0, 0,
                     (  1
                      +   (A.MONTH_SCORE - B.AVG_SCORE)
                        / (B.MAX_SCORE - B.MIN_SCORE)));

         LOG (CUR_MONTH_BILL_ID,
              '完成批量更新客户经理奖金系数');

         -------------阶段三：计算区县和客户经理奖金额---------------------------------------------
         ----------------------------------------------------------------------------------------------
         --开始计算区县奖金额
         SELECT BONUS_VALUE
           INTO ALL_BONUS_VALUE
           FROM GP_MONTH_BONUS
          WHERE MONTH = CUR_MONTH;                                  --获得全市总奖金额

         LOG (CUR_MONTH_BILL_ID, '开始批量计算各区县奖金包');

         --区县奖金包的计算。公式：客户经理团队绩效奖金包=总奖金包*（本团队人数*本团队奖金系数）/∑（每个团队人数*每个团队奖金系数）
         MERGE INTO GP_MONTH_BONUS_DETAIL A
              USING (  SELECT DISTRICT_ID,
                              DECODE (
                                 AVG (B_RATIO),
                                 0, 0,
                                 ALL_BONUS_VALUE * (B_RATIO / AVG (B_RATIO)))
                                 BONUS_VALUE
                         FROM (SELECT B.MANAGER_NUM * A.BONUS_RATIO B_RATIO,
                                      A.DISTRICT_ID
                                 FROM GP_MONTH_BONUS_DETAIL A
                                      LEFT JOIN
                                      (  SELECT COUNT (1) MANAGER_NUM,
                                                DISTRICT_ID
                                           FROM GP_MONTH_BONUS_DETAIL
                                          WHERE     TARGET_TAG_ID = 2
                                                AND MONTH = CUR_MONTH
                                                AND MONTH_BILL_ID =
                                                       CUR_MONTH_BILL_ID
                                       GROUP BY DISTRICT_ID) B
                                         ON (A.DISTRICT_ID = B.DISTRICT_ID)
                                WHERE     A.TARGET_TAG_ID = 1
                                      AND A.MONTH = CUR_MONTH
                                      AND A.MONTH_BILL_ID = CUR_MONTH_BILL_ID)
                     GROUP BY DISTRICT_ID, B_RATIO) B
                 ON (    A.DISTRICT_ID = B.DISTRICT_ID
                     AND A.TARGET_TAG_ID = 1
                     AND A.MONTH = CUR_MONTH
                     AND A.MONTH_BILL_ID = CUR_MONTH_BILL_ID)
         WHEN MATCHED
         THEN
            UPDATE SET A.BONUS_VALUE = B.BONUS_VALUE;

         LOG (CUR_MONTH_BILL_ID, '完成批量计算各区县奖金包');

         LOG (CUR_MONTH_BILL_ID, '开始批量计算客户经理奖金包');

         --开始计算客户经理的奖金额。 客户经理个人月度绩效奖金=所在团队抢盘奖金包*个人奖金系数/∑每个人奖金系数+月度绩效奖励标准的30%。
         MERGE INTO GP_MONTH_BONUS_DETAIL A
              USING (SELECT X.DISTRICT_ID,
                            Y.AVG_BONUS_RATIO,
                            X.QX_ALL_BONUS_VALUE
                       FROM (SELECT BONUS_VALUE QX_ALL_BONUS_VALUE,
                                    DISTRICT_ID
                               FROM GP_MONTH_BONUS_DETAIL
                              WHERE     TARGET_TAG_ID = 1
                                    AND MONTH = CUR_MONTH
                                    AND MONTH_BILL_ID = CUR_MONTH_BILL_ID) X
                            LEFT JOIN
                            (  SELECT AVG (BONUS_RATIO) AVG_BONUS_RATIO,
                                      DISTRICT_ID
                                 FROM GP_MONTH_BONUS_DETAIL
                                WHERE     TARGET_TAG_ID = 2
                                      AND MONTH = CUR_MONTH
                                      AND MONTH_BILL_ID = CUR_MONTH_BILL_ID
                             GROUP BY DISTRICT_ID) Y
                               ON (X.DISTRICT_ID = Y.DISTRICT_ID)) B
                 ON (    A.DISTRICT_ID = B.DISTRICT_ID
                     AND A.TARGET_TAG_ID = 2
                     AND A.MONTH = CUR_MONTH
                     AND A.MONTH_BILL_ID = CUR_MONTH_BILL_ID)
         WHEN MATCHED
         THEN
            UPDATE SET
               A.BONUS_VALUE =
                  DECODE (
                     B.AVG_BONUS_RATIO,
                     0, 0,
                     (  B.QX_ALL_BONUS_VALUE
                      * A.BONUS_RATIO
                      / B.AVG_BONUS_RATIO));              --此处没有+ 月度绩效奖励标准的30%

         LOG (CUR_MONTH_BILL_ID, '完成批量计算客户经理奖金包');
      ELSE
         RESULT_STR :=
            '未找到月份【' || CUR_MONTH || '】有效固话单';
      END IF;

      COMMIT;

      RETURN RESULT_STR;
   END;
END PKG_MONTH_TARGET;
/


==============================================================================================================
以上是包PKG_MONTH_TARGET内容
==============================================================================================================